--- a/sys-utils/fallocate.c
+++ b/sys-utils/fallocate.c
@@ -289,7 +289,9 @@
 	int	fd;
 	int	mode = 0;
 	int	dig = 0;
+#ifdef HAVE_POSIX_FALLOCATE
 	int posix = 0;
+#endif
 	loff_t	length = -2LL;
 	loff_t	offset = 0;
 
@@ -304,7 +306,9 @@
 	    { "zero-range",     no_argument,       NULL, 'z' },
 	    { "offset",         required_argument, NULL, 'o' },
 	    { "length",         required_argument, NULL, 'l' },
+#ifdef HAVE_POSIX_FALLOCATE
 	    { "posix",          no_argument,       NULL, 'x' },
+#endif
 	    { "verbose",        no_argument,       NULL, 'v' },
 	    { NULL, 0, NULL, 0 }
 	};
@@ -312,7 +316,9 @@
 	static const ul_excl_t excl[] = {	/* rows and cols in ASCII order */
 		{ 'c', 'd', 'p', 'z' },
 		{ 'c', 'n' },
+#ifdef HAVE_POSIX_FALLOCATE
 		{ 'x', 'c', 'd', 'i', 'n', 'p', 'z'},
+#endif
 		{ 0 }
 	};
 	int excl_st[ARRAY_SIZE(excl)] = UL_EXCL_STATUS_INIT;
@@ -322,7 +328,11 @@
 	textdomain(PACKAGE);
 	atexit(close_stdout);
 
+#ifdef HAVE_POSIX_FALLOCATE
 	while ((c = getopt_long(argc, argv, "hvVncpdizxl:o:", longopts, NULL))
+#else
+	while ((c = getopt_long(argc, argv, "hvVncpdzl:o:", longopts, NULL))
+#endif
 			!= -1) {
 
 		err_exclusive_options(c, longopts, excl, excl_st);
@@ -355,12 +365,12 @@
 		case 'z':
 			mode |= FALLOC_FL_ZERO_RANGE;
 			break;
-		case 'x':
 #ifdef HAVE_POSIX_FALLOCATE
+		case 'x':
 			posix = 1;
 			break;
-#else
-			errx(EXIT_FAILURE, _("posix_fallocate support is not compiled"))
+//#else
+//			errx(EXIT_FAILURE, _("posix_fallocate support is not compiled"))
 #endif
 		case 'v':
 			verbose++;
